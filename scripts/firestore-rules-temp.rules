rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Função helper para verificar se é admin
    function isAdmin() {
      return request.auth != null && 
        get(/databases/$(database)/documents/usuarios/$(request.auth.uid)).data.isAdmin == true;
    }
    
    // REGRAS TEMPORÁRIAS PARA CRIAÇÃO DA ESTRUTURA
    // ⚠️ ATENÇÃO: Estas regras são apenas para criação inicial
    // ⚠️ IMPORTANTE: Volte às regras originais após criar a estrutura
    
    // Permitir tudo para horóscopos semanais (temporariamente)
    match /horoscopos_semanais/{document=**} {
      allow read, write, create, delete: if true;
    }
    
    // Regras para leituras de tarot - CORRIGIDA
    match /leituras_tarot/{document} {
      allow read, write: if request.auth != null && 
        (resource == null || resource.data.userId == request.auth.uid);
      allow read, write, list: if isAdmin();
      allow create: if request.auth != null;
    }
    
    // Regras para diário - CORRIGIDA  
    match /diario/{document} {
      allow read, write: if request.auth != null && 
        (resource == null || resource.data.userId == request.auth.uid);
      allow read, write, list: if isAdmin();
      allow create: if request.auth != null;
    }
    
    // Resto das regras...
    match /usuarios/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      allow read, write: if isAdmin();
      allow create: if request.auth != null;
    }
    
    match /receitas/{document} {
      allow read: if request.auth != null;
      allow write, create: if isAdmin();
    }
    
    match /ai_requests/{document} {
      allow create: if request.auth != null;
      allow read: if request.auth != null && 
        (resource == null || resource.data.userId == request.auth.uid);
      allow read, list: if isAdmin();
    }
    
    // REGRA TEMPORÁRIA PARA DEBUG
    match /{document=**} {
      allow read, write, create, delete: if isAdmin();
    }
  }
} 