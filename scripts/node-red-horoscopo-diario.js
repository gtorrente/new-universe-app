// C√ìDIGO NODE-RED PARA HOR√ìSCOPO DI√ÅRIO
// Adicione este c√≥digo no Function node "Processar Requisicao Diario"

console.log('üöÄ INICIANDO PROCESSAMENTO DI√ÅRIO...');

// Fun√ß√£o para obter chave do dia atual
function getDayKey(date = new Date()) {
  const year = date.getFullYear();
  const month = (date.getMonth() + 1).toString().padStart(2, '0');
  const day = date.getDate().toString().padStart(2, '0');
  return `${year}-${month}-${day}`;
}

// Extrair signo da requisi√ß√£o
const { sign } = msg.payload;

console.log('üì• Payload recebido:', msg.payload);
console.log('üì• Signo extra√≠do:', sign);

if (!sign) {
  console.error('‚ùå Signo n√£o especificado');
  msg.payload = {
    success: false,
    error: "Signo n√£o especificado",
    message: "Par√¢metro 'sign' √© obrigat√≥rio"
  };
  return msg;
}

// Gerar URL completa para hor√≥scopo di√°rio
const diaAtual = getDayKey();
const urlCompleta = `https://firestore.googleapis.com/v1/projects/tarot-universo-catia/databases/(default)/documents/horoscopos_diarios/${diaAtual}/signos/${sign}`;

console.log('üîç DEBUG: URL completa gerada (DI√ÅRIO):');
console.log('  ', urlCompleta);

// IMPORTANTE: Definir msg.url com a URL completa
msg.url = urlCompleta;
msg.method = 'GET';
msg.headers = {
  'Content-Type': 'application/json'
};

// Armazenar informa√ß√µes adicionais
msg.isSemanal = false;
msg.signo = sign;
msg.dia = diaAtual;

console.log('‚úÖ DEBUG: Configura√ß√£o conclu√≠da (DI√ÅRIO)');
console.log('  - msg.url:', msg.url);
console.log('  - msg.method:', msg.method);
console.log('  - msg.headers:', msg.headers);

return msg; 