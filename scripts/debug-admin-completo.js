console.log('üß™ DIAGN√ìSTICO COMPLETO - Execute no Console do Browser (F12)');
console.log('');
console.log('// 1. VERIFICAR AUTENTICA√á√ÉO E STATUS ADMIN');
console.log('import { getAuth } from "firebase/auth";');
console.log('import { doc, getDoc } from "firebase/firestore";');
console.log('import { db } from "../../firebaseConfigFront";');
console.log('');
console.log('const auth = getAuth();');
console.log('const user = auth.currentUser;');
console.log('console.log("üë§ Usu√°rio logado:", user?.email, user?.uid);');
console.log('');
console.log('if (user) {');
console.log('  const userDoc = await getDoc(doc(db, "usuarios", user.uid));');
console.log('  const userData = userDoc.data();');
console.log('  console.log("üìÑ Dados do usu√°rio:", userData);');
console.log('  console.log("üëë √â admin?", userData?.isAdmin, "Tipo:", typeof userData?.isAdmin);');
console.log('} else {');
console.log('  console.log("‚ùå Usu√°rio n√£o logado");');
console.log('}');
console.log('');
console.log('// 2. TESTAR PERMISS√ïES DIRETAS');
console.log('import { collection, getDocs, deleteDoc, updateDoc } from "firebase/firestore";');
console.log('');
console.log('// Listar notifica√ß√µes');
console.log('try {');
console.log('  const snap = await getDocs(collection(db, "notificacoes"));');
console.log('  console.log("üìã Total notifica√ß√µes:", snap.docs.length);');
console.log('  snap.docs.forEach(doc => console.log("üìÑ", doc.id, doc.data().titulo));');
console.log('} catch (error) {');
console.log('  console.log("‚ùå Erro ao listar:", error.code, error.message);');
console.log('}');
console.log('');
console.log('// Testar update (deve funcionar)');
console.log('if (snap.docs.length > 0) {');
console.log('  const firstDoc = snap.docs[0];');
console.log('  try {');
console.log('    await updateDoc(doc(db, "notificacoes", firstDoc.id), { views: 999 });');
console.log('    console.log("‚úÖ UPDATE funcionou");');
console.log('  } catch (error) {');
console.log('    console.log("‚ùå Erro UPDATE:", error.code, error.message);');
console.log('  }');
console.log('}');
console.log('');
console.log('// Testar delete (problema atual)');
console.log('if (snap.docs.length > 0) {');
console.log('  const firstDoc = snap.docs[0];');
console.log('  try {');
console.log('    await deleteDoc(doc(db, "notificacoes", firstDoc.id));');
console.log('    console.log("‚úÖ DELETE funcionou");');
console.log('  } catch (error) {');
console.log('    console.log("‚ùå Erro DELETE:", error.code, error.message);');
console.log('  }');
console.log('}');