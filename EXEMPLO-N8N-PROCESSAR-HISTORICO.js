// üîß EXEMPLO PR√ÅTICO: N√ì N8N PARA PROCESSAR HIST√ìRICO
// Nome do n√≥: "Processar Historico"
// Tipo: Code Node

// ========================================
// üì• DADOS DE ENTRADA DO WEBHOOK
// ========================================
const dadosRecebidos = $input.all()[0].json;

console.log('üì• Dados recebidos:', dadosRecebidos);

// Extrair dados principais
const { 
  pergunta, 
  userId, 
  historico, 
  isNewConversation,
  totalMensagensNaConversa 
} = dadosRecebidos;

// ========================================
// üîÑ PROCESSAMENTO DO HIST√ìRICO
// ========================================
let contextoHistorico = "";
let historicoProcessado = [];

if (historico && historico.length > 0) {
  console.log('üìö Hist√≥rico recebido:', historico.length, 'mensagens');
  
  // Limitar a 10 √∫ltimas mensagens para n√£o sobrecarregar
  const MAX_HISTORICO = 10;
  const historicoLimitado = historico.slice(-MAX_HISTORICO);
  
  console.log('üìä Hist√≥rico limitado a:', historicoLimitado.length, 'mensagens');
  
  // Processar cada mensagem do hist√≥rico
  historicoProcessado = historicoLimitado.map((msg, index) => {
    const role = msg.autor === "Usu√°rio" ? "user" : "assistant";
    return `${role}: ${msg.texto}`;
  });
  
  // Juntar em uma string para o contexto
  contextoHistorico = historicoProcessado.join("\n");
  
  console.log('üìù Contexto hist√≥rico criado:', contextoHistorico.length, 'caracteres');
}

// ========================================
// üéØ CRIA√á√ÉO DO PROMPT CONTEXTUALIZADO
// ========================================
const contextoPersonalidade = `Voc√™ √© a CatIA, uma assistente virtual especializada em astrologia, tarot, receitas e bem-estar.

PERSONALIDADE:
- Amig√°vel e acolhedora
- Personalizada nas respostas
- Contextualizada com o hist√≥rico
- Espec√≠fica em suas recomenda√ß√µes

ESPECIALIDADES:
- Astrologia e hor√≥scopos
- Tarot e cartomancia
- Receitas culin√°rias
- Bem-estar e autoajuda

FORMATA√á√ÉO ESPEC√çFICA:
- Para receitas: Use **Ingredientes:** e **Modo de Preparo:**
- Para hor√≥scopos: Seja espec√≠fica e detalhada
- Para tarot: Use linguagem m√≠stica e intuitiva
- Para conselhos: Seja emp√°tica e pr√°tica`;

const contextoConversa = isNewConversation 
  ? "Esta √© uma nova conversa. Seja bem-vindo e apresente-se de forma acolhedora."
  : "Esta √© uma continua√ß√£o da conversa anterior. Mantenha o contexto e seja personalizada.";

const promptCompleto = `${contextoPersonalidade}

${contextoConversa}

${contextoHistorico ? `HIST√ìRICO DA CONVERSA:\n${contextoHistorico}\n` : ""}

PERGUNTA ATUAL DO USU√ÅRIO: ${pergunta}

Responda de forma amig√°vel, personalizada e contextualizada, mantendo a personalidade da CatIA.`;

console.log('ü§ñ Prompt completo criado:', promptCompleto.length, 'caracteres');

// ========================================
// üìä DADOS DE DEBUG E MONITORAMENTO
// ========================================
const dadosDebug = {
  perguntaOriginal: pergunta,
  userId: userId,
  historicoRecebido: historico ? historico.length : 0,
  historicoProcessado: historicoProcessado.length,
  isNewConversation: isNewConversation,
  totalMensagensNaConversa: totalMensagensNaConversa,
  tamanhoPrompt: promptCompleto.length,
  timestamp: new Date().toISOString()
};

console.log('üìä Dados de debug:', dadosDebug);

// ========================================
// üì§ DADOS DE SA√çDA
// ========================================
return {
  // Dados principais para OpenAI
  prompt: promptCompleto,
  perguntaOriginal: pergunta,
  userId: userId,
  
  // Hist√≥rico processado
  historico: historico,
  historicoProcessado: historicoProcessado,
  contextoHistorico: contextoHistorico,
  
  // Metadados
  isNewConversation: isNewConversation,
  totalMensagens: historico ? historico.length : 0,
  
  // Debug
  debug: dadosDebug
}; 